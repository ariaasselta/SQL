-- For this project, I downloaded Spotify data from Kaggle. 
-- Then I created a table to insert Spotify data into. 
-- Finally, I performed analytics on the data using SQL. 

-- Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- Then I inserted the Spotify Data .csv into the table.

-- Below are #1-7. These are some things I wanted to explore within the data set using SQL.

-- #1 Finding the the average danceability by artist
SELECT
    Spotifydata.artist_name as artist,
    AVG(Spotifydata.danceability)as avg_danceability
FROM BIT_DB.Spotifydata as Spotifydata
GROUP BY artist
ORDER BY avg_danceability desc;
 
-- #2 Finding the top 10 artists based on popularity
SELECT 
    Spotifydata.artist_name,
    avg(Spotifydata.popularity) as avg_popularity
FROM BIT_DB.Spotifydata as Spotifydata
GROUP BY Spotifydata.artist_name
ORDER BY avg_popularity desc
LIMIT 10;

-- #3 Finding the top 10 tracks based on popularity
SELECT 
    Spotifydata.track_name,
    avg(Spotifydata.popularity) as avg_popularity
FROM BIT_DB.Spotifydata as Spotifydata
GROUP BY Spotifydata.track_name
ORDER BY avg_popularity desc
LIMIT 10;

-- #4 Finding what artist released the longest song and it's length/title
SELECT
   Spotifydata.artist_name,
   Spotifydata.track_name,
   Spotifydata.duration_ms
FROM BIT_DB.Spotifydata as Spotifydata
ORDER BY Spotifydata.duration_ms desc
LIMIT 1;

-- #5 Finding the average danceability for the 10 most popular songs
SELECT 
    Spotifydata.track_name,
    Spotifydata.popularity,
    avg(Spotifydata.danceability) as avg_danceability
FROM BIT_DB.Spotifydata as Spotifydata
GROUP BY Spotifydata.track_name
ORDER BY Spotifydata.popularity desc
LIMIT 10;

-- #6 Finding the average engery for the 10 most popular songs
SELECT 
    Spotifydata.track_name,
    Spotifydata.popularity,
    avg(Spotifydata.energy) as avg_energy
FROM BIT_DB.Spotifydata as Spotifydata
GROUP BY Spotifydata.track_name
ORDER BY Spotifydata.popularity desc
LIMIT 10;

-- #7 Finding the average tempo for the 10 most popular songs
SELECT 
    Spotifydata.track_name,
    Spotifydata.popularity,
    avg(Spotifydata.tempo) as avg_tempo
FROM BIT_DB.Spotifydata as Spotifydata
GROUP BY Spotifydata.track_name
ORDER BY Spotifydata.popularity desc
LIMIT 10;
